#include <stdio.h>

unsigned long long int gcd(unsigned long long int a, unsigned long long int b) {
    if (b == 0) {
        return a;
    }
    return gcd(b, a % b);
}

unsigned long long int modInverse(unsigned long long int a, unsigned long long int m) {
    unsigned long long int m0 = m, t, q;
    unsigned long long int x0 = 0, x1 = 1;

    if (m == 1) {
        return 0;
    }

    while (a > 1) {
        // q is quotient
        q = a / m;

        t = m;

        // m is remainder now
        m = a % m;
        a = t;

        t = x0;

        x0 = x1 - q * x0;

        x1 = t;
    }

    // Make x1 positive
    if (x1 < 0) {
        x1 += m0;
    }

    return x1;
}

int main() {
    unsigned long long int p, q, e, n, phi_n, d, plaintext, ciphertext, decrypted;


    p = 17;
    q = 23;

    n = p * q;
    phi_n = (p - 1) * (q - 1);

    e = 7;

    d = modInverse(e, phi_n);

    printf("Enter the plaintext: ");
    scanf("%llu", &plaintext);

    ciphertext = 1;
    for (unsigned long long int i = 0; i < e; i++) {
        ciphertext = (ciphertext * plaintext) % n;
    }

    printf("Ciphertext: %llu\n", ciphertext);
    
    decrypted = 1;
    for (unsigned long long int i = 0; i < d; i++) {
        decrypted = (decrypted * ciphertext) % n;
    }

    printf("Decrypted plaintext: %llu\n", decrypted);

    return 0;
}
